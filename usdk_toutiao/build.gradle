apply plugin: 'com.android.application'

android {

    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28

        applicationId "com.bswhl.net.bytedance.gamecenter"
        versionCode 12
        versionName '4.0'
        manifestPlaceholders.put("APPLOG_SCHEME", "union_game")
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    // 配置结构
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            assets.srcDirs = ['src/main/assets']
            res.srcDirs = ['src/main/res']
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/maom']
            jniLibs.srcDir 'src/main/jniLibs'
        }
    }

    //这个是解决lint报错的代码
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkReleaseBuilds false//方法过时警告的开关
        disable 'InvalidPackage' //Some libraries have issues with this.
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb']
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        pickFirst 'okhttp3/internal/publicsuffix/publicsuffixes.gz'
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libweibosdkcore.so'
    }
    dexOptions{
        incremental true
    }
    /**
     * 签名设置
     */
    signingConfigs {
        release {
            v2SigningEnabled false
            File propFile = file('../config/build-system/signing.properties');
            if (propFile.exists()) {
                def Properties props = new Properties()
                props.load(new FileInputStream(propFile))
                if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                        props.containsKey('KEY_ALIAS') &&
                        props.containsKey('KEY_PASSWORD')) {
                    storeFile file(props['STORE_FILE'])
                    storePassword props['STORE_PASSWORD']
                    keyAlias props['KEY_ALIAS']
                    keyPassword props['KEY_PASSWORD']
                }
            }
        }

        debug {
            v2SigningEnabled false
            File propFile = file('../config/build-system/signing.properties');
            if (propFile.exists()) {
                def Properties props = new Properties()
                props.load(new FileInputStream(propFile))
                if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                        props.containsKey('KEY_ALIAS') &&
                        props.containsKey('KEY_PASSWORD')) {
                    storeFile file(props['STORE_FILE'])
                    storePassword props['STORE_PASSWORD']
                    keyAlias props['KEY_ALIAS']
                    keyPassword props['KEY_PASSWORD']
                }
            }
        }
    }

    /**
     * 构建配置
     */
    buildTypes {

        release {
            //执行proguard混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //签名
            signingConfig signingConfigs.release
        }

        debug {
            //不执行proguard
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //签名
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    //noinspection GradleCompatible
    implementation 'com.android.support:multidex:1.0.3'  //需要支持multidex
//    // 引入联运sdk，必须引入，版本号会根据实际情况动态调整
//    implementation "com.bytedance.ttgame:rocket_sdk_TobRelease:1.1.7.0"
//////    // 以插件形式接入  sdk内部功能会自动更新，无需游戏重新接入（推荐）
//    implementation "com.bytedance.ttgame:channel_union_plugin_TobRelease:1.1.7.0"
//    //特殊情况下，需要使用非插件方式接入，请联系渠道同学反馈
//    implementation fileTree(dir: 'aar', include: ['*.aar', '*.jar'], exclude: [])

    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    //新增-um
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.github.dfqin:grantor:2.5'

    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:support-core-utils:28.0.0'
    implementation 'com.android.support:support-core-ui:28.0.0'

    //新增
//    implementation  'com.umeng.umsdk:game:8.0.0+G'
//    implementation  'com.umeng.umsdk:common:2.0.0'
//    implementation  'com.umeng.umsdk:utdid:1.1.5.3'

    implementation 'com.qw:soulpermission:1.2.2'
    implementation project(path: ':sdk_core_QingLan')


}

repositories {

    flatDir {
        dir "../${project.name}/aar"
    }

}
