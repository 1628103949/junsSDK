apply plugin: 'com.android.library'

def publishVersion = "3.3.12"

def releaseTime() {
    new java.util.Date().format("yyyy-MM-dd", TimeZone.getDefault());
}

def exportJarName = "juns_sdk_toutiao-V" + publishVersion + "-" + releaseTime() + ".jar"

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0.0"
        manifestPlaceholders.put("APPLOG_SCHEME","rangersapplog.byAx6uYt".toLowerCase())
    }

    //这个是解决lint报错的代码
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkReleaseBuilds false//方法过时警告的开关
        disable 'InvalidPackage' //Some libraries have issues with this.
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }

    /**
     * 构建配置
     */
    buildTypes {

        release {
            //执行proguard混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "juns_sdk_toutiao-V" + "-V${publishVersion}-${releaseTime()}.aar"
                }
            }
        }

        debug {
            //不执行proguard
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'aar', include: ['*.aar', '*.jar'], exclude: [])
    implementation project(path: ':sdk_core2')
}



